  0%|          | 0/200 [00:00<?, ?it/s]
  0%|          | 0/543 [00:00<?, ?it/s][A  0%|          | 0/543 [00:11<?, ?it/s]
  0%|          | 0/200 [00:11<?, ?it/s]
Traceback (most recent call last):
  File "/n/home11/mingzeyuan/DiT/train_lora_formal.py", line 93, in <module>
    loss_dict = diffusion.training_losses(model, x, t, model_kwargs)
  File "/n/home11/mingzeyuan/DiT/diffusion/respace.py", line 97, in training_losses
    return super().training_losses(self._wrap_model(model), *args, **kwargs)
  File "/n/home11/mingzeyuan/DiT/diffusion/gaussian_diffusion.py", line 747, in training_losses
    model_output = model(x_t, t, **model_kwargs)
  File "/n/home11/mingzeyuan/DiT/diffusion/respace.py", line 129, in __call__
    return self.model(x, new_ts, **kwargs)
  File "/n/home11/mingzeyuan/.conda/envs/qdit/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/n/home11/mingzeyuan/.conda/envs/qdit/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/n/home11/mingzeyuan/DiT/models.py", line 245, in forward
    x = block(x, c)                      # (N, T, D)
  File "/n/home11/mingzeyuan/.conda/envs/qdit/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/n/home11/mingzeyuan/.conda/envs/qdit/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/n/home11/mingzeyuan/DiT/models.py", line 121, in forward
    x = x + gate_mlp.unsqueeze(1) * self.mlp(modulate(self.norm2(x), shift_mlp, scale_mlp))
  File "/n/home11/mingzeyuan/.conda/envs/qdit/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/n/home11/mingzeyuan/.conda/envs/qdit/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/n/home11/mingzeyuan/.conda/envs/qdit/lib/python3.9/site-packages/timm/layers/mlp.py", line 42, in forward
    x = self.fc1(x)
  File "/n/home11/mingzeyuan/.conda/envs/qdit/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/n/home11/mingzeyuan/.conda/envs/qdit/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/n/home11/mingzeyuan/DiT/quant/lora_utils.py", line 21, in forward
    return self.original_layer(x) + lora_adjustment * self.scale
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 288.00 MiB. GPU 0 has a total capacity of 39.38 GiB of which 16.12 MiB is free. Including non-PyTorch memory, this process has 39.36 GiB memory in use. Of the allocated memory 38.31 GiB is allocated by PyTorch, and 566.72 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
